<?xml version="1.1" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd">

    <aop:aspectj-autoproxy proxy-target-class="true"/>
    <!-- 自动扫描且只扫描@Controller -->
    <context:component-scan base-package="com.opengroup.lzy" use-default-filters="false">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
        <context:include-filter type="annotation" expression="org.springframework.web.bind.annotation.ControllerAdvice"/>
    </context:component-scan>
    <context:property-placeholder
		ignore-unresolvable="true" location="classpath*:/system.properties" />
    <mvc:annotation-driven  content-negotiation-manager="contentNegotiationManager">
    <mvc:message-converters>
			<ref bean="stringHttpMessageConverter" />
            <ref bean="jsonHttpMessageConverter" />
		</mvc:message-converters>
	</mvc:annotation-driven>
	
	<!-- string message -->
	<bean id="stringHttpMessageConverter" class="org.springframework.http.converter.StringHttpMessageConverter" >
		<constructor-arg value="UTF-8" index="0"></constructor-arg>
        <property name="supportedMediaTypes">
            <list><value>text/plain;charset=utf-8</value></list>
        </property>
	</bean>
	
	<!-- json -->
	<bean id="jsonHttpMessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter" >
		<property name="supportedMediaTypes">
			<list>
				<value>text/plain;charset=utf-8</value>
				<value>application/json;charset=utf-8</value>
			</list>
		</property>
		<property name="objectMapper">  
             <bean class="com.fasterxml.jackson.databind.ObjectMapper">  
                 <property name="dateFormat">  
                     <bean class="java.text.SimpleDateFormat">  
                         <constructor-arg type="java.lang.String" value="yyyy-MM-dd HH:mm:ss" />  
                     </bean>  
                 </property>  
             </bean>  
         </property>
	</bean>
	
	<bean id="contentNegotiationManager" class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
	    <property name="favorPathExtension" value="false" />
	    <property name="favorParameter" value="true" />
	    <property name="mediaTypes" >
	    	<value>
	    		json=application/json 
	    		xml=application/xml
	    	</value>
	    </property>
	</bean>

    <!-- 定义html文件的位置 -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/views/"/>
        <property name="suffix" value=".jsp"/>
    </bean>

    <!-- 容器默认的DefaultServletHandler处理 所有静态内容与无RequestMapping处理的URL-->
    <mvc:default-servlet-handler/>

    <!-- 静态文件映射 -->
    <mvc:resources mapping="/bootstrap/**" location="/bootstrap/" />
    <mvc:resources mapping="/example/**" location="/example/" />
    <mvc:resources mapping="/images/**" location="/images/" />
    <!-- 转发 -->
    <!--<mvc:view-controller path="/" view-name="/admin/index" />-->
    <mvc:view-controller path="/admin/" view-name="/admin/index" />

    <!-- 将Controller抛出的异常转到特定View, 保持SiteMesh的装饰效果 -->
    <bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
        <property name="exceptionMappings">
            <props>
                <prop key="org.apache.shiro.authz.UnauthorizedException">/error/403</prop>
                <prop key="org.apache.shiro.authz.UnauthenticatedException">/error/403</prop>
                <!--<prop key="java.lang.Throwable">/error/500</prop>-->
            </props>
        </property>
    </bean>

    <!-- 自定义拦截链配置 -->
  <!--   <mvc:interceptors>
        <mvc:interceptor>
            <mvc:mapping path="/*/*/create*"/>
            <mvc:mapping path="/*/*/delete*"/>
            <mvc:mapping path="/*/*/update*"/>
            <mvc:mapping path="/*/*/import*"/>
            <bean class="com.lc.sys.interceptor.LogInterceptor"></bean>
        </mvc:interceptor>
        <mvc:interceptor>
        	<mvc:mapping path="/**"/>
        	<bean class="com.lc.supchain.interceptor.MongoLogInterceptor">
        		<property name="opSwitch" value="${log_switch}"/>
        	</bean>
        </mvc:interceptor>
    </mvc:interceptors> -->
    
    <!-- 文件上传处理 -->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxUploadSize" value="104857600"/>
		<property name="maxInMemorySize" value="4096"/>
	</bean>
	
	<!-- id生成器 -->            
	<bean id="idWorker" class="com.opengroup.lzy.tools.IdWorker" scope="singleton">
		<constructor-arg type="long">
			<value>${worker_id}</value>
		</constructor-arg>
		<constructor-arg type="long">
			<value>${server_type}</value>
		</constructor-arg>
	</bean>
	
</beans>
