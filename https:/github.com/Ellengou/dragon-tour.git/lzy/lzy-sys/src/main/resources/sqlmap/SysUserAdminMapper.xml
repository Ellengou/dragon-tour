<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Dao 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.opengroup.lzy.sys.dao.SysUserAdminDao" >
    <resultMap id="BaseResultMap" type="com.opengroup.lzy.sys.domain.SysUserAdmin" >
        <id column="id" property="id" jdbcType="INTEGER" />
        <result column="comp_core_id" property="compCoreId" jdbcType="INTEGER" />
        <result column="company_id" property="companyId" jdbcType="INTEGER" />
        <result column="org_id" property="orgId" jdbcType="BIGINT" />
        <result column="employee_id" property="employeeId" jdbcType="BIGINT" />
        <result column="login_name" property="loginName" jdbcType="VARCHAR" />
        <result column="alias_name" property="aliasName" jdbcType="VARCHAR" />
        <result column="password" property="password" jdbcType="VARCHAR" />
        <result column="real_name" property="realName" jdbcType="VARCHAR" />
        <result column="sex" property="sex" jdbcType="CHAR" />
        <result column="email" property="email" jdbcType="VARCHAR" />
        <result column="phone" property="phone" jdbcType="CHAR" />
        <result column="data_type" property="dataType" jdbcType="CHAR" />
        <result column="user_id" property="userId" jdbcType="INTEGER" />
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
        <result column="remark" property="remark" jdbcType="VARCHAR" />
        <result column="salt" property="salt" jdbcType="VARCHAR" />
        <result column="company_lock" property="companyLock" jdbcType="CHAR" />
        <result column="state" property="state" jdbcType="INTEGER" />
        <result column="login_count" property="loginCount" jdbcType="INTEGER" />
        <result column="previous_visit" property="previousVisit" jdbcType="TIMESTAMP" />
        <result column="last_visit" property="lastVisit" jdbcType="TIMESTAMP" />
        <result column="errorCount" property="errorcount" jdbcType="INTEGER" />
    </resultMap>
    <sql id="Base_Column_List" >
        id, comp_core_id, company_id, org_id, employee_id, login_name, alias_name, password,
        real_name, sex, email, phone, data_type, user_id, create_time, remark, salt, company_lock,
        state, login_count, previous_visit, last_visit, errorCount
    </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
        select
        <include refid="Base_Column_List" />
        from sys_user_admin
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
        delete from sys_user_admin
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="com.opengroup.lzy.sys.domain.SysUserAdmin"  useGeneratedKeys="true" keyProperty="id">
        insert into sys_user_admin (id, comp_core_id, company_id,
        org_id, employee_id, login_name,
        alias_name, password, real_name,
        sex, email, phone, data_type,
        user_id, create_time, remark,
        salt, company_lock, state,
        login_count, previous_visit, last_visit,
        errorCount)
        values (#{id,jdbcType=INTEGER}, #{compCoreId,jdbcType=INTEGER}, #{companyId,jdbcType=INTEGER},
        #{orgId,jdbcType=BIGINT}, #{employeeId,jdbcType=BIGINT}, #{loginName,jdbcType=VARCHAR},
        #{aliasName,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{realName,jdbcType=VARCHAR},
        #{sex,jdbcType=CHAR}, #{email,jdbcType=VARCHAR}, #{phone,jdbcType=CHAR}, #{dataType,jdbcType=CHAR},
        #{userId,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{remark,jdbcType=VARCHAR},
        #{salt,jdbcType=VARCHAR}, #{companyLock,jdbcType=CHAR}, #{state,jdbcType=INTEGER},
        #{loginCount,jdbcType=INTEGER}, #{previousVisit,jdbcType=TIMESTAMP}, #{lastVisit,jdbcType=TIMESTAMP},
        #{errorcount,jdbcType=INTEGER})
    </insert>
    <insert id="insertSelective" parameterType="com.opengroup.lzy.sys.domain.SysUserAdmin"  useGeneratedKeys="true" keyProperty="id">
        insert into sys_user_admin
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="id != null" >
                id,
            </if>
            <if test="compCoreId != null" >
                comp_core_id,
            </if>
            <if test="companyId != null" >
                company_id,
            </if>
            <if test="orgId != null" >
                org_id,
            </if>
            <if test="employeeId != null" >
                employee_id,
            </if>
            <if test="loginName != null" >
                login_name,
            </if>
            <if test="aliasName != null" >
                alias_name,
            </if>
            <if test="password != null" >
                password,
            </if>
            <if test="realName != null" >
                real_name,
            </if>
            <if test="sex != null" >
                sex,
            </if>
            <if test="email != null" >
                email,
            </if>
            <if test="phone != null" >
                phone,
            </if>
            <if test="dataType != null" >
                data_type,
            </if>
            <if test="userId != null" >
                user_id,
            </if>
            <if test="createTime != null" >
                create_time,
            </if>
            <if test="remark != null" >
                remark,
            </if>
            <if test="salt != null" >
                salt,
            </if>
            <if test="companyLock != null" >
                company_lock,
            </if>
            <if test="state != null" >
                state,
            </if>
            <if test="loginCount != null" >
                login_count,
            </if>
            <if test="previousVisit != null" >
                previous_visit,
            </if>
            <if test="lastVisit != null" >
                last_visit,
            </if>
            <if test="errorcount != null" >
                errorCount,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="id != null" >
                #{id,jdbcType=INTEGER},
            </if>
            <if test="compCoreId != null" >
                #{compCoreId,jdbcType=INTEGER},
            </if>
            <if test="companyId != null" >
                #{companyId,jdbcType=INTEGER},
            </if>
            <if test="orgId != null" >
                #{orgId,jdbcType=BIGINT},
            </if>
            <if test="employeeId != null" >
                #{employeeId,jdbcType=BIGINT},
            </if>
            <if test="loginName != null" >
                #{loginName,jdbcType=VARCHAR},
            </if>
            <if test="aliasName != null" >
                #{aliasName,jdbcType=VARCHAR},
            </if>
            <if test="password != null" >
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="realName != null" >
                #{realName,jdbcType=VARCHAR},
            </if>
            <if test="sex != null" >
                #{sex,jdbcType=CHAR},
            </if>
            <if test="email != null" >
                #{email,jdbcType=VARCHAR},
            </if>
            <if test="phone != null" >
                #{phone,jdbcType=CHAR},
            </if>
            <if test="dataType != null" >
                #{dataType,jdbcType=CHAR},
            </if>
            <if test="userId != null" >
                #{userId,jdbcType=INTEGER},
            </if>
            <if test="createTime != null" >
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="remark != null" >
                #{remark,jdbcType=VARCHAR},
            </if>
            <if test="salt != null" >
                #{salt,jdbcType=VARCHAR},
            </if>
            <if test="companyLock != null" >
                #{companyLock,jdbcType=CHAR},
            </if>
            <if test="state != null" >
                #{state,jdbcType=INTEGER},
            </if>
            <if test="loginCount != null" >
                #{loginCount,jdbcType=INTEGER},
            </if>
            <if test="previousVisit != null" >
                #{previousVisit,jdbcType=TIMESTAMP},
            </if>
            <if test="lastVisit != null" >
                #{lastVisit,jdbcType=TIMESTAMP},
            </if>
            <if test="errorcount != null" >
                #{errorcount,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.opengroup.lzy.sys.domain.SysUserAdmin" >
        update sys_user_admin
        <set >
            <if test="compCoreId != null" >
                comp_core_id = #{compCoreId,jdbcType=INTEGER},
            </if>
            <if test="companyId != null" >
                company_id = #{companyId,jdbcType=INTEGER},
            </if>
            <if test="orgId != null" >
                org_id = #{orgId,jdbcType=BIGINT},
            </if>
            <if test="employeeId != null" >
                employee_id = #{employeeId,jdbcType=BIGINT},
            </if>
            <if test="loginName != null" >
                login_name = #{loginName,jdbcType=VARCHAR},
            </if>
            <if test="aliasName != null" >
                alias_name = #{aliasName,jdbcType=VARCHAR},
            </if>
            <if test="password != null" >
                password = #{password,jdbcType=VARCHAR},
            </if>
            <if test="realName != null" >
                real_name = #{realName,jdbcType=VARCHAR},
            </if>
            <if test="sex != null" >
                sex = #{sex,jdbcType=CHAR},
            </if>
            <if test="email != null" >
                email = #{email,jdbcType=VARCHAR},
            </if>
            <if test="phone != null" >
                phone = #{phone,jdbcType=CHAR},
            </if>
            <if test="dataType != null" >
                data_type = #{dataType,jdbcType=CHAR},
            </if>
            <if test="userId != null" >
                user_id = #{userId,jdbcType=INTEGER},
            </if>
            <if test="createTime != null" >
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="remark != null" >
                remark = #{remark,jdbcType=VARCHAR},
            </if>
            <if test="salt != null" >
                salt = #{salt,jdbcType=VARCHAR},
            </if>
            <if test="companyLock != null" >
                company_lock = #{companyLock,jdbcType=CHAR},
            </if>
            <if test="state != null" >
                state = #{state,jdbcType=INTEGER},
            </if>
            <if test="loginCount != null" >
                login_count = #{loginCount,jdbcType=INTEGER},
            </if>
            <if test="previousVisit != null" >
                previous_visit = #{previousVisit,jdbcType=TIMESTAMP},
            </if>
            <if test="lastVisit != null" >
                last_visit = #{lastVisit,jdbcType=TIMESTAMP},
            </if>
            <if test="errorcount != null" >
                errorCount = #{errorcount,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.opengroup.lzy.sys.domain.SysUserAdmin" >
    update sys_user_admin
    set comp_core_id = #{compCoreId,jdbcType=INTEGER},
      company_id = #{companyId,jdbcType=INTEGER},
      org_id = #{orgId,jdbcType=BIGINT},
      employee_id = #{employeeId,jdbcType=BIGINT},
      login_name = #{loginName,jdbcType=VARCHAR},
      alias_name = #{aliasName,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      real_name = #{realName,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=CHAR},
      email = #{email,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=CHAR},
      data_type = #{dataType,jdbcType=CHAR},
      user_id = #{userId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      remark = #{remark,jdbcType=VARCHAR},
      salt = #{salt,jdbcType=VARCHAR},
      company_lock = #{companyLock,jdbcType=CHAR},
      state = #{state,jdbcType=INTEGER},
      login_count = #{loginCount,jdbcType=INTEGER},
      previous_visit = #{previousVisit,jdbcType=TIMESTAMP},
      last_visit = #{lastVisit,jdbcType=TIMESTAMP},
      errorCount = #{errorcount,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

    <!--////////////////////////////////////////////////////////////////////// -->
    <select id="selectByLoginName" resultMap="BaseResultMap" parameterType="java.lang.String" >
        select
        <include refid="Base_Column_List" />
        from sys_user_admin
        where binary login_name = #{loginName}
    </select>

    <select id="selectForRole" resultType="com.opengroup.lzy.sys.domain.SysRole" parameterType="java.lang.String">
        select r.id, r.company_id, r.user_id, r.operate_time, r.real_name, r.status, r.memo
        from sys_user_admin u, sys_role r, sys_user_role ur
        where binary u.login_name = #{loginName}
        and u.id = ur.user_id
        and r.id = ur.role_id
    </select>

    <select id="selectForResource" resultType="com.opengroup.lzy.sys.domain.SysResource" parameterType="java.lang.String">
        select r.id, r.company_id, r.user_id, r.operate_time, r.real_name, r.status, r.memo
        from sys_user_admin u, sys_role r, sys_user_role ur
        where binary u.login_name = #{loginName}
        and u.id=ur.user_id
        and r.id=ur.role_id
    </select>

    <select id="countUserByCond" resultType="java.lang.Integer" parameterType="java.util.Map">
        <![CDATA[
        SELECT COUNT (1) FROM sys_user_admin WHERE 1 = 1
        ]]>
        <if test="loginName != null and loginName != ''">
            <![CDATA[
				and binary login_name like CONCAT('%','${loginName}','%')
			]]>
        </if>
        <if test="realName != null and realName != ''">
            <![CDATA[
				and real_name like CONCAT('%','${realName}','%')
			]]>
        </if>
        <if test="phone != null and phone != ''">
            <![CDATA[
				and phone like CONCAT('%','${phone}','%')
			]]>
        </if>
        <if test="email != null and email != ''">
            <![CDATA[
				and email like CONCAT('%','${email}','%')
			]]>
        </if>
        <if test="state != null and state != ''">
            <![CDATA[
				and state like CONCAT('%','${state}','%')
			]]>
        </if>
        <if test="startDate != null and startDate != ''">
            <![CDATA[
				and date_format(last_visit, '%Y-%m-%d') <= str_to_date(#{startDate},'%Y-%m-%d')
			]]>
        </if>

        <if test="endDate != null and endDate != ''">
            <![CDATA[
				and date_format(last_visit, '%Y-%m-%d') <= str_to_date(#{endDate},'%Y-%m-%d')
			]]>
        </if>
    </select>

    <select id="selectAll" resultMap="BaseResultMap" parameterType="map">
        select
        <include refid="Base_Column_List" />
        from sys_user_admin where 1 = 1
        <choose>
            <when test="userType == 1">
                and comp_core_id is null
            </when>
            <when test="userType == 2" >
                and comp_core_id = company_id
                <if test="compCoreId != null">
                    and comp_core_id = ${compCoreId}
                </if>
            </when>
        </choose>
    </select>

    <!-- 查询后台用户 -->
    <select id="selectUser" resultMap="BaseResultMap" parameterType="java.util.Map">
        SELECT
        <include refid="Base_Column_List" />
        FROM sys_user_admin s
        WHERE 1 = 1
        <if test="loginName != null and loginName != ''">
            and binary login_name like CONCAT('%','${loginName}','%' )
        </if>
        <if test="realName != null and realName != ''">
            and real_name like CONCAT('%','${realName}','%')
        </if>
        <if test="phone != null and phone != ''">
            and phone like CONCAT('%','${phone}','%')
        </if>
        <if test="email != null and email != ''">
            and email like CONCAT('%','${email}','%')
        </if>
        <if test="state != null and state != ''">
            and state like CONCAT('%','${state}','%')
        </if>
        <if test="startDate != null and startDate != ''">
            <![CDATA[
				and date_format(last_visit, '%Y-%m-%d') >= str_to_date(#{startDate},'%Y-%m-%d')
			]]>
        </if>
        <if test="endDate != null and endDate != ''">
            <![CDATA[
				and date_format(last_visit, '%Y-%m-%d') <= str_to_date(#{endDate},'%Y-%m-%d')
			]]>
        </if>
        <choose>
            <when test="orgId != null">
                and org_id = #{orgId}
            </when>
            <when test="companyId != null" >
                and company_id = #{companyId}
            </when>
            <otherwise>
                and company_id IS NULL
            </otherwise>
        </choose>
        limit #{begin} , #{rows}
    </select>
    <select id="countUser" resultType="java.lang.Integer" parameterType="java.util.Map">
        SELECT
        count(1)
        FROM sys_user_admin s
        WHERE 1 = 1
        <if test="loginName != null and loginName != ''">
            and binary login_name like CONCAT('%','${loginName}','%' )
        </if>
        <if test="realName != null and realName != ''">
            and real_name like CONCAT('%','${realName}','%')
        </if>
        <if test="phone != null and phone != ''">
            and phone like CONCAT('%','${phone}','%')
        </if>
        <if test="email != null and email != ''">
            and email like CONCAT('%','${email}','%')
        </if>
        <if test="state != null and state != ''">
            and state like CONCAT('%','${state}','%')
        </if>
        <if test="startDate != null and startDate != ''">
            <![CDATA[
				and date_format(last_visit, '%Y-%m-%d') >= str_to_date(#{startDate},'%Y-%m-%d')
			]]>
        </if>
        <if test="endDate != null and endDate != ''">
            <![CDATA[
				and date_format(last_visit, '%Y-%m-%d') <= str_to_date(#{endDate},'%Y-%m-%d')
			]]>
        </if>
        <choose>
            <when test="orgId != null">
                and org_id = #{orgId}
            </when>
            <when test="companyId != null" >
                and company_id = #{companyId}
            </when>
            <otherwise>
                and company_id IS NULL
            </otherwise>
        </choose>
    </select>

    <!-- 查询企业用户 -->
    <select id="selectUserInComp" resultMap="BaseResultMap"  parameterType="java.util.Map">
        SELECT
        <include refid="Base_Column_List" />
        FROM sys_user_admin
        WHERE sex = '2'
        <if test="compCoreId == null ">
            and comp_core_id = company_id
        </if>
        <if test="compCoreId != null ">
            and comp_core_id = #{compCoreId}
            and company_id != comp_core_id
        </if>
        <if test="companyChildIds != null and companyChildIds != ''">
            and company_id in (${companyChildIds})
        </if>
        <if test="loginName != null and loginName != ''">
            and binary login_name like CONCAT('%','${loginName}','%' )
        </if>
        <if test="realName != null and realName != ''">
            and real_name like CONCAT('%','${realName}','%')
        </if>
        <if test="phone != null and phone != ''">
            and phone like CONCAT('%','${phone}','%')
        </if>
        <if test="email != null and email != ''">
            and email like CONCAT('%','${email}','%')
        </if>
        <if test="state != null and state == '3'.toString()">
            and company_lock = '1'
        </if>
        <if test="endDate != null and endDate != ''">
            <![CDATA[
				and date_format(last_visit, '%Y-%m-%d') <= str_to_date(#{endDate},'%Y-%m-%d')
			]]>
        </if>
        <if test="state != null and state != '' and state != '3'.toString()">
            and state like CONCAT('%','${state}','%')
        </if>
        <if test="startDate != null and startDate != ''">
            <![CDATA[
				and date_format(last_visit, '%Y-%m-%d') >= str_to_date(#{startDate},'%Y-%m-%d')
			]]>
        </if>
        <if test="endDate != null and endDate != ''">
            <![CDATA[
				and date_format(last_visit, '%Y-%m-%d') <= str_to_date(#{endDate},'%Y-%m-%d')
			]]>
        </if>
        limit #{begin} , #{rows}
    </select>
    <select id="countUserInComp" resultType="java.lang.Integer"  parameterType="java.util.Map">
        SELECT
        count(1)
        FROM sys_user_admin
        WHERE sex = '2'
        <if test="compCoreId == null ">
            and comp_core_id = company_id
        </if>
        <if test="compCoreId != null ">
            and comp_core_id = #{compCoreId}
            and company_id != comp_core_id
        </if>
        <if test="companyChildIds != null and companyChildIds != ''">
            and company_id in (${companyChildIds})
        </if>
        <if test="loginName != null and loginName != ''">
            and binary login_name like CONCAT('%','${loginName}','%' )
        </if>
        <if test="realName != null and realName != ''">
            and real_name like CONCAT('%','${realName}','%')
        </if>
        <if test="phone != null and phone != ''">
            and phone like CONCAT('%','${phone}','%')
        </if>
        <if test="email != null and email != ''">
            and email like CONCAT('%','${email}','%')
        </if>
        <if test="state != null and state == '3'.toString()">
            and company_lock = '1'
        </if>
        <if test="state != null and state != '' and state != '3'.toString()">
            and state like CONCAT('%','${state}','%')
        </if>
        <if test="startDate != null and startDate != ''">
            <![CDATA[
				and date_format(last_visit, '%Y-%m-%d') >= str_to_date(#{startDate},'%Y-%m-%d')
			]]>
        </if>
        <if test="endDate != null and endDate != ''">
            <![CDATA[
				and date_format(last_visit, '%Y-%m-%d') <= str_to_date(#{endDate},'%Y-%m-%d')
			]]>
        </if>
    </select>

    <!-- 查询核心企业下所有用户 -->
    <select id="selectByCompCoreId" resultMap="BaseResultMap" parameterType="int">
        select
        <include refid="Base_Column_List" />
        from sys_user_admin
        where comp_core_id = #{_parameter}
    </select>

    <!-- 修改核心企业下所有后台用户账号状态 -->
    <update id="updateByCompanyCoreId" parameterType="map" >
        update sys_user_admin
        set company_lock = #{enabled}
        where comp_core_id = #{compCoreId}
    </update>

    <!--////////////////////////////////////////////////////////////////////// -->
</mapper>

